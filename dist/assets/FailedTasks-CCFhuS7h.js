import{_ as x,j as F,d as m,e as t,w as l,F as T,a as s,b as r,f as a,g as z,c as f,t as d}from"./index-s1HWEh-n.js";import{D as R,C as H,a as I}from"./DeviceFilter-CAhQUCZs.js";import{_ as N}from"./SearchFilter-BWCR7lAi.js";const A={name:"FailedTasks",components:{DatePicker:R,ClientFilter:H,DeviceFilter:I,SearchBarFilter:N},data(){return{failTasks:[],showModal:[],searchFilter:"",clientsFilter:[],devicesFilter:[],totalDevices:[]}},computed:{filteredTasks(){let e=this.failTasks;return this.clientsFilter.length>0&&(e=e.filter(o=>this.clientsFilter.includes(o.last_error.client_id))),this.devicesFilter.length>0&&this.devicesFilter.length<this.totalDevices.length&&(console.log("DEVICES FILTER EN FILTERED TASKS: ",this.devicesFilter),e=e.filter(o=>this.devicesFilter.includes(o.last_error.device_id))),e}},mounted(){this.getFailedTasks()},methods:{handleSearch(e){this.searchFilter=e},handleClients(e){this.clientsFilter=e,this.getDevicesByClients()},handleDevices(e){this.devicesFilter=e,this.getDevicesByClients(),console.log("DEVICES: ",e)},async getFailedTasks(){const e=await F.get(this.$store.state.backendUrl+"/syncManual",{headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.$store.state.token}});this.failTasks=e.data,console.log(this.failTasks)},async getDevicesByClients(){try{let e=[];for(const o of this.clientsFilter){const C=await F.get(this.$store.state.backendUrl+"/devices",{params:{client_id:o,clientConfig:!0},headers:{"Content-Type":"application/json",Authorization:"Bearer "+this.$store.state.token}});e=e.concat(C.data.map(h=>({...h,host:h.client_config.zeusHost})))}this.totalDevices=e,this.devicesFilter=e}catch(e){console.error("Error en la solicitud a la API:",e),this.ShowError=!0}}}};function V(e,o,C,h,v,_){const D=s("ClientFilter"),u=s("CCol"),g=s("DeviceFilter"),b=s("SearchBarFilter"),k=s("CButton"),y=s("CRow"),c=s("CTableHeaderCell"),p=s("CTableRow"),B=s("CTableHead"),i=s("CTableDataCell"),S=s("CTableBody"),E=s("CTable");return r(),m(T,null,[t(y,null,{default:l(()=>[t(u,{class:"col-3"},{default:l(()=>[t(D,{onFilter:_.handleClients},null,8,["onFilter"])]),_:1}),t(u,{class:"col-3"},{default:l(()=>[t(g,{allDevices:v.devicesFilter,onFilter:_.handleDevices},null,8,["allDevices","onFilter"])]),_:1}),t(u,{class:"col-4"},{default:l(()=>[t(b,{onSearch:_.handleSearch},null,8,["onSearch"])]),_:1}),t(u,{class:"col-2"},{default:l(()=>[t(k)]),_:1})]),_:1}),t(E,{class:"mt-4",striped:"",bordered:""},{default:l(()=>[t(B,null,{default:l(()=>[t(p,null,{default:l(()=>[t(c,{scope:"col"},{default:l(()=>[a("Cliente")]),_:1}),t(c,{scope:"col"},{default:l(()=>[a("Nombre")]),_:1}),t(c,{scope:"col"},{default:l(()=>[a("CÃ³digo zeus")]),_:1}),t(c,{scope:"col"},{default:l(()=>[a("Fecha")]),_:1}),t(c,{scope:"col"},{default:l(()=>[a("Error")]),_:1})]),_:1})]),_:1}),t(S,null,{default:l(()=>[(r(!0),m(T,null,z(_.filteredTasks,(n,w)=>(r(),f(p,{key:w},{default:l(()=>[n.client!==null?(r(),f(i,{key:0},{default:l(()=>[a(d(n.client.name),1)]),_:2},1024)):(r(),f(i,{key:1})),t(i,null,{default:l(()=>[a(d(n.device.zeusName),1)]),_:2},1024),t(i,null,{default:l(()=>[a(d(n.device.zeusCode),1)]),_:2},1024),t(i,null,{default:l(()=>[a(d(n.last_error.updated_at),1)]),_:2},1024),t(i,null,{default:l(()=>[a(d(n.last_error.message),1)]),_:2},1024)]),_:2},1024))),128))]),_:1})]),_:1})],64)}const M=x(A,[["render",V]]);export{M as default};
